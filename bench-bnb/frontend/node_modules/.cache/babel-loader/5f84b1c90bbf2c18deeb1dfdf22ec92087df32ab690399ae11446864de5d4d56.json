{"ast":null,"code":"var _jsxFileName = \"/home/jcar/dev/aAclasswork/w12d3/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/LoginFormModal/LoginForm.js\n\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const handleSubmit = e => {\n    debugger;\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      var _data;\n      let data;\n      try {\n        // .clone() essentially allows you to read the response body twice\n        data = await res.clone().json();\n      } catch {\n        data = await res.text(); // Will hit this case if the server is down\n      }\n\n      if ((_data = data) !== null && _data !== void 0 && _data.errors) setErrors(data.errors);else if (data) setErrors([data]);else setErrors([res.statusText]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username or Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: credential,\n        onChange: e => setCredential(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"fzr++e43uIkaGaiy4lw1Jcx/dmE=\", false, function () {\n  return [useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","sessionActions","useDispatch","LoginForm","dispatch","credential","setCredential","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","clone","json","text","statusText","map","error","target","value"],"sources":["/home/jcar/dev/aAclasswork/w12d3/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js"],"sourcesContent":["// frontend/src/components/LoginFormModal/LoginForm.js\n\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginForm.css\";\n\nfunction LoginForm() {\n    const dispatch = useDispatch();\n    const [credential, setCredential] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    const handleSubmit = (e) => {\n        debugger\n        e.preventDefault();\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential, password }))\n            .catch(async (res) => {\n                let data;\n                try {\n                    // .clone() essentially allows you to read the response body twice\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text(); // Will hit this case if the server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <ul>\n                {errors.map(error => <li key={error}>{error}</li>)}\n            </ul>\n            <label>\n                Username or Email\n                <input\n                    type=\"text\"\n                    value={credential}\n                    onChange={(e) => setCredential(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Password\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Log In</button>\n        </form>\n    );\n}\n\nexport default LoginForm;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,iBAAiB;AAAC;AAEzB,SAASC,SAAS,GAAG;EAAA;EACjB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IACxB;IACAA,CAAC,CAACC,cAAc,EAAE;IAClBH,SAAS,CAAC,EAAE,CAAC;IACb,OAAON,QAAQ,CAACH,cAAc,CAACa,KAAK,CAAC;MAAET,UAAU;MAAEE;IAAS,CAAC,CAAC,CAAC,CAC1DQ,KAAK,CAAC,MAAOC,GAAG,IAAK;MAAA;MAClB,IAAIC,IAAI;MACR,IAAI;QACA;QACAA,IAAI,GAAG,MAAMD,GAAG,CAACE,KAAK,EAAE,CAACC,IAAI,EAAE;MACnC,CAAC,CAAC,MAAM;QACJF,IAAI,GAAG,MAAMD,GAAG,CAACI,IAAI,EAAE,CAAC,CAAC;MAC7B;;MACA,aAAIH,IAAI,kCAAJ,MAAMR,MAAM,EAAEC,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC,CAAC,KACpC,IAAIQ,IAAI,EAAEP,SAAS,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC,KAC5BP,SAAS,CAAC,CAACM,GAAG,CAACK,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEV,YAAa;IAAA,wBACzB;MAAA,UACKF,MAAM,CAACa,GAAG,CAACC,KAAK,iBAAI;QAAA,UAAiBA;MAAK,GAAbA,KAAK;QAAA;QAAA;QAAA;MAAA,QAAc;IAAC;MAAA;MAAA;MAAA;IAAA,QACjD,eACL;MAAA,6CAEI;QACI,IAAI,EAAC,MAAM;QACX,KAAK,EAAElB,UAAW;QAClB,QAAQ,EAAGO,CAAC,IAAKN,aAAa,CAACM,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;QAC/C,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACR;MAAA,oCAEI;QACI,IAAI,EAAC,UAAU;QACf,KAAK,EAAElB,QAAS;QAChB,QAAQ,EAAGK,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;QAC7C,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACR;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEf;AAAC,GAnDQtB,SAAS;EAAA,QACGD,WAAW;AAAA;AAAA,KADvBC,SAAS;AAqDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}