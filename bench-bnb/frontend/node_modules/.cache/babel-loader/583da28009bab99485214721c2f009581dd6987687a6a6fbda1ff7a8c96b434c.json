{"ast":null,"code":"import csrfFetch from './csrf';\nconst SET_CURRENT_USER = 'session/setCurrentUser';\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser';\nconst setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user\n  };\n};\nconst removeCurrentUser = () => {\n  return {\n    type: REMOVE_CURRENT_USER\n  };\n};\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\nconst initialState = {\n  user: null\n};\nconst sessionReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload\n      };\n    case REMOVE_CURRENT_USER:\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport default sessionReducer;","map":{"version":3,"names":["csrfFetch","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","type","payload","removeCurrentUser","login","dispatch","credential","password","response","method","body","JSON","stringify","data","json","initialState","sessionReducer","state","action"],"sources":["/home/jcar/dev/aAclasswork/w12d3/authenticate-me/frontend/src/store/session.js"],"sourcesContent":["import csrfFetch from './csrf';\n\nconst SET_CURRENT_USER = 'session/setCurrentUser';\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser';\n\nconst setCurrentUser = (user) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user\n  };\n};\n\nconst removeCurrentUser = () => {\n  return {\n    type: REMOVE_CURRENT_USER\n  };\n};\n\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state, user: action.payload };\n    case REMOVE_CURRENT_USER:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,QAAQ;AAE9B,MAAMC,gBAAgB,GAAG,wBAAwB;AACjD,MAAMC,mBAAmB,GAAG,2BAA2B;AAEvD,MAAMC,cAAc,GAAIC,IAAI,IAAK;EAC/B,OAAO;IACLC,IAAI,EAAEJ,gBAAgB;IACtBK,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,MAAMG,iBAAiB,GAAG,MAAM;EAC9B,OAAO;IACLF,IAAI,EAAEH;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMM,KAAK,GAAIJ,IAAI,IAAK,MAAOK,QAAQ,IAAK;EACjD,MAAM;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGP,IAAI;EACrC,MAAMQ,QAAQ,GAAG,MAAMZ,SAAS,CAAC,cAAc,EAAE;IAC/Ca,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBN,UAAU;MACVC;IACF,CAAC;EACH,CAAC,CAAC;EACF,MAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;EAClCT,QAAQ,CAACN,cAAc,CAACc,IAAI,CAACb,IAAI,CAAC,CAAC;EACnC,OAAOQ,QAAQ;AACjB,CAAC;AAED,MAAMO,YAAY,GAAG;EAAEf,IAAI,EAAE;AAAK,CAAC;AAEnC,MAAMgB,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAClD,QAAQA,MAAM,CAACjB,IAAI;IACjB,KAAKJ,gBAAgB;MACnB,OAAO;QAAE,GAAGoB,KAAK;QAAEjB,IAAI,EAAEkB,MAAM,CAAChB;MAAQ,CAAC;IAC3C,KAAKJ,mBAAmB;MACtB,OAAO;QAAE,GAAGmB,KAAK;QAAEjB,IAAI,EAAE;MAAK,CAAC;IACjC;MACE,OAAOiB,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}